BaseGeometry
============

>>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

Test cases

	Zero and negative integers
	--------------------------
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", 0)
	Traceback (most recent call last):
	ValueError: check must be greater than 0

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", -78)
	Traceback (most recent call last):
	ValueError: check must be greater than 0

	Integers greater than 0
	-----------------------
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", 999)

	area method when not implemented
	--------------------------------
	>>> bg = BaseGeometry()
	>>> bg.area()
	Traceback (most recent call last):
	Exception: area() is not implemented

	Non-integers
	------------
	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", [3])
	Traceback (most recent call last):
	TypeError: check must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", (3,))
	Traceback (most recent call last):
	TypeError: check must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", None)
	Traceback (most recent call last):
	TypeError: check must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("check", {"age": 2})
	Traceback (most recent call last):
	TypeError: check must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("height", False)
	Traceback (most recent call last):
	TypeError: check must be an integer

	>>> bg = BaseGeometry()
	>>> bg.integer_validator()
	Traceback (most recent call last):
	TypeError: integer_validator() missing 2 required positional arguments: 'name' and 'value'

	>>> bg = BaseGeometry()
	>>> bg.integer_validator("sex")
	Traceback (most recent call last):
	TypeError: integer_validator() missing 1 required positional argument: 'value'
